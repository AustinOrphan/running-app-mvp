# Database
DATABASE_URL="file:./dev.db"

# JWT Authentication - CRITICAL: Generate secure secrets before production!
# Generate with: openssl rand -base64 32
JWT_SECRET="CHANGE-THIS-TO-SECURE-256-BIT-SECRET-BEFORE-PRODUCTION"
JWT_ACCESS_EXPIRY=1h
JWT_REFRESH_EXPIRY=7d
JWT_ALGORITHM=HS256

# Password Security
BCRYPT_ROUNDS=12
PASSWORD_MIN_LENGTH=12

# Salt for deterministic user ID hashing in logs
LOG_SALT="CHANGE-THIS-TO-SECURE-RANDOM-STRING-FOR-PRODUCTION"

# Server Configuration
PORT=3001
NODE_ENV=development

# Rate Limiting
RATE_LIMITING_ENABLED=true
AUTH_RATE_LIMIT_WINDOW=15
AUTH_RATE_LIMIT_MAX=5
API_RATE_LIMIT_WINDOW=15
API_RATE_LIMIT_MAX=100

# CORS Configuration
ALLOWED_ORIGINS=
CORS_CREDENTIALS=true

# Security Headers
CSP_ENABLED=true
HSTS_ENABLED=true
HSTS_MAX_AGE=31536000

# Database Security
DATABASE_SSL=false
DATABASE_SSL_REJECT_UNAUTHORIZED=true

# Session Security
SESSION_SECRET="CHANGE-THIS-TO-SECURE-256-BIT-SECRET-BEFORE-PRODUCTION"
SESSION_SECURE=false
SESSION_SAME_SITE=strict

# Monitoring & Logging
SECURITY_LOGGING_ENABLED=true
LOG_LEVEL=info
PII_HASHING_ENABLED=true

# Production Security
HTTPS_REDIRECT=false

# Advanced Security Configuration
BLOCKED_IPS=
ALLOWED_IPS=
BLOCK_SUSPICIOUS_USER_AGENTS=false
ALLOWED_REFERER_DOMAINS=

# Input Validation
MAX_REQUEST_SIZE=1048576
SANITIZATION_ENABLED=true

# Instructions:
# 1. Copy this file to .env
# 2. Update the JWT_SECRET with a strong, unique secret
# 3. Update LOG_SALT with a strong random value for production logs
# 4. In production, use a proper database URL (PostgreSQL, MySQL, etc.)
# 5. Configure ALLOWED_ORIGINS for production domains
# 6. Set BLOCKED_IPS to block known malicious IP addresses
# 7. Set ALLOWED_IPS to restrict access to specific IPs (if needed)
# 8. Set BLOCK_SUSPICIOUS_USER_AGENTS=true to block automated tools
