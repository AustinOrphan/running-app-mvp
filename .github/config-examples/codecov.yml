# Codecov Configuration for Running Tracker MVP

coverage:
  # Overall coverage target
  range: '70...90'
  round: down
  precision: 2

  # Status checks configuration
  status:
    project:
      default:
        target: 80% # Target coverage percentage
        threshold: 1% # Allow 1% drop from target
        base: auto # Compare against automatic base
        branches:
          - main
          - develop
        if_ci_failed: error # Fail if CI failed

    patch:
      default:
        target: 75% # Require 75% coverage on new code
        threshold: 5% # Allow 5% variance
        base: auto
        branches:
          - main

# Comments configuration
comment:
  layout: 'reach,diff,flags,tree,reach'
  behavior: default
  require_changes: false
  require_base: false
  require_head: true
  branches:
    - main
    - develop

# File patterns to ignore
ignore:
  - '*.config.js'
  - '*.config.ts'
  - 'vite.config.ts'
  - 'jest.config.js'
  - 'commitlint.config.js'
  - 'eslint.config.js'
  - 'tailwind.config.js'
  - 'postcss.config.js'
  - 'playwright.config.ts'
  - '**/*.d.ts'
  - '**/node_modules/**'
  - '**/dist/**'
  - '**/build/**'
  - '**/coverage/**'
  - '**/.next/**'
  - '**/prisma/migrations/**'
  - '**/*.test.ts'
  - '**/*.test.tsx'
  - '**/*.spec.ts'
  - '**/*.spec.tsx'
  - '**/tests/**'
  - '**/__tests__/**'
  - '**/test-utils/**'
  - '**/mocks/**'
  - 'setup.sh'
  - 'quick-start.sh'
  - '*.md'

# Flag configuration for different parts of the codebase
flags:
  frontend:
    paths:
      - src/
    carryforward: true

  backend:
    paths:
      - routes/
      - middleware/
      - server.ts
    carryforward: true

  database:
    paths:
      - prisma/
    carryforward: true

# Pull request behavior is configured via status checks above
# The patch status will enforce coverage requirements on new code

# Notification settings
notifications:
  slack:
    default:
      only_pulls: false
      branches: main
      threshold: 1%

# GitHub checks configuration
github_checks:
  annotations: true

# Profiling (for performance monitoring)
profiling:
  critical_files_paths:
    - src/components/
    - routes/
    - middleware/

# Fix configuration
fixes:
  - "src/(.*)::src/\\1" # Frontend source mapping
  - "routes/(.*)::routes/\\1" # Backend routes mapping

# Validation settings
strict_yaml_branch: main

# Archive configuration
archive:
  uploads: true

# Parsing configuration
parsers:
  gcov:
    branch_detection:
      conditional: yes
      loop: yes
      method: no
      macro: no

# Custom coverage display
coverage_display:
  precision: 2
  round: down
  range: '60...95'

# Team configuration (if using Codecov teams)
team_coverage:
  frontend_team:
    paths:
      - src/
    target: 85%

  backend_team:
    paths:
      - routes/
      - middleware/
      - server.ts
    target: 90%
