name: Comprehensive Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup test environment
        run: |
          npm run prisma:generate
          npm run test:setup:db

      - name: Run comprehensive test suite
        run: npm run test:runner:ci
        env:
          CI: true

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports-${{ matrix.node-version }}
          path: test-reports/
          retention-days: 30

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports-${{ matrix.node-version }}
          path: |
            coverage/
            coverage-integration/
          retention-days: 30

      - name: Comment test results on PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Read test results
            const resultsPath = path.join(process.env.GITHUB_WORKSPACE, 'test-reports', 'test-results.json');
            if (fs.existsSync(resultsPath)) {
              const results = JSON.parse(fs.readFileSync(resultsPath, 'utf8'));
              
              // Build comment
              let comment = '## Test Results\n\n';
              comment += `**Status:** ${results.failed === 0 ? '✅ Passed' : '❌ Failed'}\n`;
              comment += `**Duration:** ${results.totalDuration}ms\n\n`;
              
              comment += '### Summary\n';
              comment += `- Passed: ${results.passed}\n`;
              comment += `- Failed: ${results.failed}\n\n`;
              
              if (Object.keys(results.coverage).length > 0) {
                comment += '### Coverage\n';
                for (const [suite, coverage] of Object.entries(results.coverage)) {
                  comment += `**${suite}:**\n`;
                  comment += `- Lines: ${coverage.lines.pct}%\n`;
                  comment += `- Statements: ${coverage.statements.pct}%\n`;
                  comment += `- Functions: ${coverage.functions.pct}%\n`;
                  comment += `- Branches: ${coverage.branches.pct}%\n\n`;
                }
              }
              
              // Post comment
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
