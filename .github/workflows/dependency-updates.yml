name: 🔄 Dependency Updates

on:
  # Run on Dependabot PRs
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
    
  # Manual trigger for testing
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'Run in test mode (dry-run)'
        required: false
        default: 'false'
        type: boolean

jobs:
  # Detect if this is a Dependabot PR
  detect-dependabot:
    name: 🤖 Detect Dependabot PR
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]' || github.event_name == 'workflow_dispatch'
    outputs:
      is-dependabot: ${{ steps.check.outputs.is-dependabot }}
      update-type: ${{ steps.analyze.outputs.update-type }}
      package-ecosystem: ${{ steps.analyze.outputs.package-ecosystem }}
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 🔍 Check if Dependabot PR
        id: check
        run: |
          if [[ "${{ github.actor }}" == "dependabot[bot]" ]]; then
            echo "is-dependabot=true" >> $GITHUB_OUTPUT
          else
            echo "is-dependabot=false" >> $GITHUB_OUTPUT
          fi
          
      - name: 📊 Analyze dependency update
        id: analyze
        if: steps.check.outputs.is-dependabot == 'true'
        run: |
          # Extract update type from PR title
          title="${{ github.event.pull_request.title }}"
          
          if [[ "$title" == *"security"* ]]; then
            echo "update-type=security" >> $GITHUB_OUTPUT
          elif [[ "$title" == *"deps("* ]]; then
            echo "update-type=regular" >> $GITHUB_OUTPUT
          elif [[ "$title" == *"ci("* ]]; then
            echo "update-type=ci" >> $GITHUB_OUTPUT
          else
            echo "update-type=unknown" >> $GITHUB_OUTPUT
          fi
          
          # Extract package ecosystem
          if [[ "$title" == *"npm"* ]] || [[ "$title" == *"deps"* ]]; then
            echo "package-ecosystem=npm" >> $GITHUB_OUTPUT
          elif [[ "$title" == *"github-actions"* ]] || [[ "$title" == *"ci("* ]]; then
            echo "package-ecosystem=github-actions" >> $GITHUB_OUTPUT
          elif [[ "$title" == *"docker"* ]]; then
            echo "package-ecosystem=docker" >> $GITHUB_OUTPUT
          else
            echo "package-ecosystem=unknown" >> $GITHUB_OUTPUT
          fi

  # Validate dependency updates
  validate-updates:
    name: ✅ Validate Dependency Updates
    runs-on: ubuntu-latest
    needs: detect-dependabot
    if: needs.detect-dependabot.outputs.is-dependabot == 'true' && needs.detect-dependabot.outputs.package-ecosystem == 'npm'
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: 🔍 Install dependencies
        run: npm ci
        
      - name: 🏗️ Build project
        run: npm run build
        
      - name: 🧪 Run tests
        run: |
          npm run test:run
          npm run test:integration
          
      - name: 🔧 Check linting
        run: npm run lint
        
      - name: 📝 Type check
        run: npm run typecheck
        
      - name: 📊 Check for vulnerabilities
        run: npm audit --audit-level=moderate
        continue-on-error: true
        
      - name: 📈 Generate test report
        run: |
          echo "## 🔄 Dependency Update Validation" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Build**: Successful" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Tests**: All passing" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Linting**: No issues" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Type checking**: Clean" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Update Type**: ${{ needs.detect-dependabot.outputs.update-type }}" >> $GITHUB_STEP_SUMMARY
          echo "**Ecosystem**: ${{ needs.detect-dependabot.outputs.package-ecosystem }}" >> $GITHUB_STEP_SUMMARY

  # Auto-approve and merge low-risk updates
  auto-merge:
    name: 🚀 Auto-merge Safe Updates
    runs-on: ubuntu-latest
    needs: [detect-dependabot, validate-updates]
    if: |
      needs.detect-dependabot.outputs.is-dependabot == 'true' && 
      needs.validate-updates.result == 'success' &&
      (
        needs.detect-dependabot.outputs.update-type == 'security' ||
        contains(github.event.pull_request.title, 'patch') ||
        contains(github.event.pull_request.title, '@types/') ||
        contains(github.event.pull_request.title, 'eslint') ||
        contains(github.event.pull_request.title, 'prettier')
      )
    steps:
      - name: 🤖 Auto-approve PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const { number } = context.issue;
            
            console.log(`Auto-approving PR #${number}`);
            
            await github.rest.pulls.createReview({
              owner,
              repo,
              pull_number: number,
              event: 'APPROVE',
              body: '🤖 Auto-approved by dependency update workflow.\n\n✅ All tests passed\n✅ Build successful\n✅ Low-risk update detected'
            });
            
      - name: 🚀 Enable auto-merge
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const { number } = context.issue;
            
            console.log(`Enabling auto-merge for PR #${number}`);
            
            try {
              await github.rest.pulls.merge({
                owner,
                repo,
                pull_number: number,
                commit_title: `${context.payload.pull_request.title}`,
                commit_message: 'Auto-merged by dependency update workflow',
                merge_method: 'squash'
              });
              
              console.log('✅ PR merged successfully');
            } catch (error) {
              console.log('⚠️ Auto-merge failed:', error.message);
              console.log('PR may require manual review');
            }

  # Comment on PRs that require manual review
  require-manual-review:
    name: 👀 Require Manual Review
    runs-on: ubuntu-latest
    needs: [detect-dependabot, validate-updates]
    if: |
      needs.detect-dependabot.outputs.is-dependabot == 'true' && 
      needs.validate-updates.result == 'success' &&
      !(
        needs.detect-dependabot.outputs.update-type == 'security' ||
        contains(github.event.pull_request.title, 'patch') ||
        contains(github.event.pull_request.title, '@types/') ||
        contains(github.event.pull_request.title, 'eslint') ||
        contains(github.event.pull_request.title, 'prettier')
      )
    steps:
      - name: 💬 Add review comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const { number } = context.issue;
            
            const comment = `## 👀 Manual Review Required
            
            This dependency update requires manual review before merging.
            
            **Update Details:**
            - **Type**: ${{ needs.detect-dependabot.outputs.update-type }}
            - **Ecosystem**: ${{ needs.detect-dependabot.outputs.package-ecosystem }}
            
            **Validation Status:**
            ✅ Build successful
            ✅ All tests passing
            ✅ Linting clean
            ✅ Type checking passed
            
            **Review Checklist:**
            - [ ] Check for breaking changes in changelog
            - [ ] Verify compatibility with existing code
            - [ ] Review migration guides if applicable
            - [ ] Test critical functionality manually
            - [ ] Check for security implications
            
            Once reviewed, this PR can be merged manually.`;
            
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: number,
              body: comment
            });

  # Handle failed validations
  validation-failed:
    name: ❌ Handle Failed Validation
    runs-on: ubuntu-latest
    needs: [detect-dependabot, validate-updates]
    if: |
      needs.detect-dependabot.outputs.is-dependabot == 'true' && 
      needs.validate-updates.result == 'failure'
    steps:
      - name: 💬 Add failure comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const { number } = context.issue;
            
            const comment = `## ❌ Dependency Update Validation Failed
            
            This dependency update failed validation and cannot be merged automatically.
            
            **Update Details:**
            - **Type**: ${{ needs.detect-dependabot.outputs.update-type }}
            - **Ecosystem**: ${{ needs.detect-dependabot.outputs.package-ecosystem }}
            
            **Issues Found:**
            Please check the workflow logs for detailed error information.
            
            **Next Steps:**
            1. Review the workflow logs
            2. Fix any breaking changes
            3. Update tests if necessary
            4. Consider if this is a major version update that needs special handling
            
            **Manual Actions Required:**
            - [ ] Investigate test failures
            - [ ] Fix compatibility issues
            - [ ] Update code for breaking changes
            - [ ] Add/update tests as needed
            
            This PR will need manual intervention before it can be merged.`;
            
            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: number,
              body: comment
            });
            
      - name: 🏷️ Add failure labels
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const { number } = context.issue;
            
            await github.rest.issues.addLabels({
              owner,
              repo,
              issue_number: number,
              labels: ['validation-failed', 'needs-investigation', 'manual-review-required']
            });

  # Workflow summary
  summary:
    name: 📋 Workflow Summary
    runs-on: ubuntu-latest
    needs: [detect-dependabot, validate-updates, auto-merge, require-manual-review, validation-failed]
    if: always() && needs.detect-dependabot.outputs.is-dependabot == 'true'
    steps:
      - name: 📊 Generate summary
        run: |
          echo "# 🔄 Dependency Update Workflow Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**PR**: #${{ github.event.number }} - ${{ github.event.pull_request.title }}" >> $GITHUB_STEP_SUMMARY
          echo "**Update Type**: ${{ needs.detect-dependabot.outputs.update-type }}" >> $GITHUB_STEP_SUMMARY
          echo "**Ecosystem**: ${{ needs.detect-dependabot.outputs.package-ecosystem }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.validate-updates.result }}" == "success" ]]; then
            echo "✅ **Validation**: Passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Validation**: Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.auto-merge.result }}" == "success" ]]; then
            echo "🚀 **Auto-merge**: Completed" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.require-manual-review.result }}" == "success" ]]; then
            echo "👀 **Status**: Requires manual review" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.validation-failed.result }}" == "success" ]]; then
            echo "⚠️ **Status**: Validation failed, needs investigation" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "For more details, check individual job logs above." >> $GITHUB_STEP_SUMMARY