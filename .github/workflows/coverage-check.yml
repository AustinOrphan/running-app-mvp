name: 📊 Coverage Check

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  coverage:
    name: Check Test Coverage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup database
        run: |
          # Ensure database directory exists
          mkdir -p prisma
          # Deploy migrations and generate client
          npx prisma migrate dev --name init || npx prisma migrate deploy
          npx prisma generate
        env:
          DATABASE_URL: file:./prisma/test.db

      - name: Run tests with coverage
        run: npm run test:coverage:unit:ci
        env:
          DATABASE_URL: file:./prisma/test.db
          JWT_SECRET: test-secret-key-for-ci-environment-must-be-longer-than-32-characters
          NODE_ENV: test

      - name: Check coverage thresholds
        id: coverage
        run: |
          COVERAGE=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
          echo "### 📊 Test Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Overall Coverage**: ${COVERAGE}%" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Check if coverage meets minimum threshold (temporarily lowered for CI)
          THRESHOLD=20
          if (( $(echo "$COVERAGE < $THRESHOLD" | bc -l) )); then
            echo "❌ Coverage is below ${THRESHOLD}% threshold" >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            echo "✅ Coverage meets minimum threshold (${THRESHOLD}%)" >> $GITHUB_STEP_SUMMARY
            echo "🎯 TODO: Improve coverage to reach 50%+ target" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Generate coverage report
        if: always()
        run: |
          echo "## Coverage Details" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Type | Coverage | Details |" >> $GITHUB_STEP_SUMMARY
          echo "|------|----------|---------|" >> $GITHUB_STEP_SUMMARY
          echo "| Statements | $(cat coverage/coverage-summary.json | jq '.total.statements.pct')% | $(cat coverage/coverage-summary.json | jq -r '.total.statements.covered')/$(cat coverage/coverage-summary.json | jq -r '.total.statements.total') |" >> $GITHUB_STEP_SUMMARY
          echo "| Branches | $(cat coverage/coverage-summary.json | jq '.total.branches.pct')% | $(cat coverage/coverage-summary.json | jq -r '.total.branches.covered')/$(cat coverage/coverage-summary.json | jq -r '.total.branches.total') |" >> $GITHUB_STEP_SUMMARY
          echo "| Functions | $(cat coverage/coverage-summary.json | jq '.total.functions.pct')% | $(cat coverage/coverage-summary.json | jq -r '.total.functions.covered')/$(cat coverage/coverage-summary.json | jq -r '.total.functions.total') |" >> $GITHUB_STEP_SUMMARY
          echo "| Lines | $(cat coverage/coverage-summary.json | jq '.total.lines.pct')% | $(cat coverage/coverage-summary.json | jq -r '.total.lines.covered')/$(cat coverage/coverage-summary.json | jq -r '.total.lines.total') |" >> $GITHUB_STEP_SUMMARY

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: |
            coverage/
            coverage-analysis.md

      - name: Comment PR with coverage
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const coverage = ${{ steps.coverage.outputs.coverage }};
            const comment = `## 📊 Test Coverage Report

            **Overall Coverage**: ${coverage}%

            | Type | Coverage |
            |------|----------|
            | Statements | ${{ fromJSON(steps.coverage.outputs.statements || '0') }}% |
            | Branches | ${{ fromJSON(steps.coverage.outputs.branches || '0') }}% |
            | Functions | ${{ fromJSON(steps.coverage.outputs.functions || '0') }}% |
            | Lines | ${coverage}% |

            ${coverage < 50 ? '⚠️ Coverage is below 50% threshold' : '✅ Coverage meets minimum threshold'}

            [View detailed report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Coverage trend analysis
        run: |
          # Compare with base branch coverage
          if [ -f .coverage-baseline.json ]; then
            BASELINE=$(cat .coverage-baseline.json | jq '.total.lines.pct')
            CURRENT=${{ steps.coverage.outputs.coverage }}
            DIFF=$(echo "$CURRENT - $BASELINE" | bc)
            
            echo "### Coverage Trend" >> $GITHUB_STEP_SUMMARY
            echo "Baseline: ${BASELINE}%" >> $GITHUB_STEP_SUMMARY
            echo "Current: ${CURRENT}%" >> $GITHUB_STEP_SUMMARY
            echo "Change: ${DIFF}%" >> $GITHUB_STEP_SUMMARY
            
            if (( $(echo "$DIFF < -5" | bc -l) )); then
              echo "⚠️ Significant coverage decrease detected!" >> $GITHUB_STEP_SUMMARY
              exit 1
            fi
          fi

      - name: Update coverage badge
        if: github.ref == 'refs/heads/main'
        run: |
          COVERAGE=${{ steps.coverage.outputs.coverage }}
          COLOR="red"
          if (( $(echo "$COVERAGE >= 80" | bc -l) )); then
            COLOR="brightgreen"
          elif (( $(echo "$COVERAGE >= 60" | bc -l) )); then
            COLOR="yellow"
          elif (( $(echo "$COVERAGE >= 40" | bc -l) )); then
            COLOR="orange"
          fi

          # Update README badge
          sed -i "s/coverage-[0-9]*%25-[a-z]*/coverage-${COVERAGE}%25-${COLOR}/g" README.md || true
