{
  "permissions": {
    "allow": [
      "mcp__serena__initial_instructions",
      "mcp__serena__activate_project",
      "mcp__serena__check_onboarding_performed",
      "WebFetch(domain:github.com)",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__serena__list_dir",
      "mcp__serena__read_memory",
      "Bash(npm run test:*)",
      "Bash(npx tsc:*)",
      "mcp__serena__read_file",
      "Bash(find:*)",
      "Bash(git checkout:*)",
      "Bash(sed:*)",
      "Bash(git add:*)",
      "Bash(gh pr view:*)",
      "Bash(git branch:*)",
      "mcp__github__list_pull_requests",
      "mcp__github__get_pull_request_status",
      "mcp__github__get_pull_request_files",
      "mcp__github__add_issue_comment",
      "mcp__github__get_pull_request",
      "mcp__github__get_pull_request_comments",
      "mcp__github__get_issue_comments",
      "mcp__github__create_issue",
      "mcp__github__get_pull_request_reviews",
      "mcp__github__get_pull_request_diff",
      "Bash(gh api:*)",
      "Bash(npm test:*)",
      "mcp__github__list_issues",
      "mcp__github__update_pull_request",
      "mcp__github__update_issue",
      "Bash(ls:*)",
      "mcp__serena__think_about_whether_you_are_done",
      "Bash(npm run test:accessibility:*)",
      "Bash(npm run test:a11y:*)",
      "Bash(rg -n \":\\s*any\\b|<any>|any\\[\\]|any\\s*=\" --type ts --type tsx .)",
      "Bash(rg -n \":\\s*any\\b|<any>|any\\[\\]|any\\s*=\" -g \"*.ts\" -g \"*.tsx\" .)",
      "Bash(rg:*)",
      "Bash(npx eslint:*)",
      "Bash(git merge:*)",
      "Bash(git ls-tree:*)",
      "Bash(npx prettier:*)",
      "Bash(git restore:*)",
      "mcp__github__list_branches",
      "Bash(gh pr list:*)",
      "mcp__serena__think_about_collected_information",
      "mcp__serena__insert_before_symbol",
      "mcp__serena__insert_after_symbol",
      "Bash(npm run test:integration:*)",
      "Bash(npm run test:*)",
      "Bash(npm run test:e2e:*)",
      "Bash(npm run:*)",
      "mcp__serena__summarize_changes",
      "Bash(gh label:*)",
      "Bash(gh project:*)",
      "Bash(gh milestone create:*)",
      "Bash(gh:*)",
      "Bash(mkdir:*)",
      "Bash(grep:*)",
      "Bash(NODE_ENV=test npm run validate-test-env)",
      "mcp__serena__execute_shell_command",
      "mcp__serena__search_for_pattern",
      "mcp__serena__replace_regex",
      "mcp__serena__find_symbol",
      "mcp__serena__find_file",
      "mcp__serena__get_symbols_overview",
      "mcp__serena__create_text_file",
      "mcp__filesystem__directory_tree",
      "mcp__filesystem__list_directory_with_sizes",
      "mcp__filesystem__read_file",
      "mcp__filesystem__list_directory",
      "mcp__Context7__resolve-library-id",
      "mcp__Context7__get-library-docs",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git reset:*)",
      "Bash(git pull:*)",
      "Bash(git rm:*)",
      "Bash(cd:*)",
      "Bash(for file in *.test.ts)",
      "Bash(do)",
      "Bash(done)",
      "mcp__serena__list_memories",
      "Bash(npx vitest run:*)",
      "mcp__playwright__playwright_navigate",
      "mcp__playwright__playwright_get_visible_text",
      "mcp__serena__think_about_task_adherence",
      "Bash(diff:*)",
      "Bash(git remote:*)",
      "Bash(mv:*)",
      "Bash(node:*)",
      "Bash(rm:*)",
      "mcp__todos__List-Pending-Todos",
      "Bash(npx husky:*)",
      "Bash(npm install:*)",
      "Bash(npm outdated:*)",
      "Bash(git switch:*)",
      "Bash(git tag:*)"
    ],
    "deny": []
  }
}
