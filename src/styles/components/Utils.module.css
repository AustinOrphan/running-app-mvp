/**
 * Utility Component Styles - CSS Module
 * 
 * Extracted from App.css as part of CSS architecture migration.
 * Uses CSS variables from globals.css for consistent theming.
 * Includes animations, loading states, skeleton components, and utility classes.
 */

/* Animations and Keyframes */
@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

@keyframes expandIn {
  from {
    opacity: 0;
    max-height: 0;
    padding-top: 0;
    padding-bottom: 0;
  }
  to {
    opacity: 1;
    max-height: 500px;
    padding-top: 16px;
    padding-bottom: 16px;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideIn {
  from {
    transform: translateX(-100%);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes slideUp {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes bounce {
  0%,
  20%,
  50%,
  80%,
  100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-10px);
  }
  60% {
    transform: translateY(-5px);
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

/* Skeleton Loading Components */
.skeleton {
  pointer-events: none;
}

.skeletonLine {
  background: linear-gradient(
    90deg,
    var(--border-color) 25%,
    var(--surface-hover) 50%,
    var(--border-color) 75%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
  border-radius: 4px;
  height: 16px;
  margin-bottom: 8px;
}

.skeletonText {
  background: linear-gradient(
    90deg,
    var(--border-color) 25%,
    var(--surface-hover) 50%,
    var(--border-color) 75%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
  border-radius: 4px;
  height: 14px;
  margin-bottom: 6px;
}

.skeletonTitle {
  background: linear-gradient(
    90deg,
    var(--border-color) 25%,
    var(--surface-hover) 50%,
    var(--border-color) 75%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
  border-radius: 4px;
  height: 20px;
  margin-bottom: 12px;
  width: 60%;
}

.skeletonCircle {
  width: 160px;
  height: 160px;
  border-radius: 50%;
  background: linear-gradient(
    90deg,
    var(--border-color) 25%,
    var(--surface-hover) 50%,
    var(--border-color) 75%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
}

.skeletonChart {
  display: flex;
  align-items: center;
  gap: 40px;
}

.skeletonLegend {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.skeletonLegendItem {
  display: flex;
  align-items: center;
  gap: 8px;
}

.skeletonLegendColor {
  width: 12px;
  height: 12px;
  border-radius: 2px;
  background: linear-gradient(
    90deg,
    var(--border-color) 25%,
    var(--surface-hover) 50%,
    var(--border-color) 75%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
}

.skeletonLegendText {
  width: 80px;
  height: 12px;
  background: linear-gradient(
    90deg,
    var(--border-color) 25%,
    var(--surface-hover) 50%,
    var(--border-color) 75%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
  border-radius: 2px;
}

.skeletonLineChart {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  justify-content: flex-end;
  height: 200px;
  gap: 4px;
  padding: 20px;
}

.skeletonBar {
  width: 20px;
  background: linear-gradient(
    90deg,
    var(--border-color) 25%,
    var(--surface-hover) 50%,
    var(--border-color) 75%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
  border-radius: 2px;
}

/* Table Skeleton */
.tableSkeleton {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.skeletonRow {
  display: flex;
  gap: 16px;
  align-items: center;
  padding: 12px 0;
}

.headerSkeleton {
  border-bottom: 2px solid var(--border-color);
}

.skeletonRow:not(.headerSkeleton) {
  border-bottom: 1px solid var(--border-color);
}

.skeletonCell {
  background: linear-gradient(
    90deg,
    var(--border-color) 25%,
    var(--surface-hover) 50%,
    var(--border-color) 75%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
  border-radius: 4px;
  height: 16px;
}

/* Loading States */
.loading {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 40px;
  color: var(--text-secondary);
}

.loadingSpinner {
  width: 24px;
  height: 24px;
  border: 2px solid var(--border-color);
  border-top: 2px solid var(--color-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
  margin-right: 12px;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.loadingDots {
  display: flex;
  gap: 4px;
}

.loadingDot {
  width: 8px;
  height: 8px;
  background: var(--color-primary);
  border-radius: 50%;
  animation: loadingDotPulse 1.4s infinite ease-in-out;
}

.loadingDot:nth-child(1) {
  animation-delay: -0.32s;
}
.loadingDot:nth-child(2) {
  animation-delay: -0.16s;
}

@keyframes loadingDotPulse {
  0%,
  80%,
  100% {
    transform: scale(0);
  }
  40% {
    transform: scale(1);
  }
}

/* Transition Classes */
.animated {
  transition: all 0.2s ease;
}

.fadeIn {
  animation: fadeIn 0.3s ease-out;
}

.slideIn {
  animation: slideIn 0.3s ease-out;
}

.slideUp {
  animation: slideUp 0.3s ease-out;
}

.expandIn {
  animation: expandIn 0.3s ease-out;
}

.bounce {
  animation: bounce 0.6s ease;
}

.pulse {
  animation: pulse 2s infinite;
}

/* Hover Effects */
.hoverScale {
  transition: transform 0.2s ease;
}

.hoverScale:hover {
  transform: scale(1.02);
}

.hoverGlow {
  position: relative;
}

.hoverGlow::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: inherit;
  box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
  opacity: 0;
  transition: opacity 0.2s ease;
  pointer-events: none;
  z-index: -1;
}

.hoverGlow:hover::before {
  opacity: 1;
}

/* Disabled States */
.disabled {
  opacity: 0.6;
  pointer-events: none;
  cursor: not-allowed;
}

.disabledButton {
  opacity: 0.6;
  pointer-events: none;
  cursor: not-allowed;
  filter: grayscale(0.5);
}

/* Visibility Utilities */
.hidden {
  display: none !important;
}

.invisible {
  visibility: hidden;
}

.visuallyHidden {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Mobile Responsive Utilities */
@media (max-width: 768px) {
  .skeletonChart {
    flex-direction: column;
    gap: 20px;
  }

  .skeletonCircle {
    width: 120px;
    height: 120px;
  }

  .hiddenMobile {
    display: none !important;
  }

  .fullWidthMobile {
    width: 100% !important;
  }
}

@media (min-width: 769px) {
  .hiddenDesktop {
    display: none !important;
  }
}

/* Focus States */
.focusRing:focus {
  outline: 2px solid var(--color-primary);
  outline-offset: 2px;
}

.focusRingInset:focus {
  outline: 2px solid var(--color-primary);
  outline-offset: -2px;
}

/* Scrollbar Styling */
.customScrollbar {
  scrollbar-width: thin;
  scrollbar-color: var(--border-color) transparent;
}

.customScrollbar::-webkit-scrollbar {
  width: 6px;
}

.customScrollbar::-webkit-scrollbar-track {
  background: transparent;
}

.customScrollbar::-webkit-scrollbar-thumb {
  background: var(--border-color);
  border-radius: 3px;
}

.customScrollbar::-webkit-scrollbar-thumb:hover {
  background: var(--text-tertiary);
}
